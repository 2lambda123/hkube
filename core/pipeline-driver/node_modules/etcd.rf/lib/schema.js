
const uuidv4 = require('uuid/v4');


const registerSchema = {
    "type": "object",
    "properties": {

        "ttl": {
            "type": "integer",
            "default": 10,
        },
        "data": {
            "default": {},
            "type": "object"
        },
        "instanceId": {
            "default": uuidv4(),
            "type": "string"
        },
        "interval": {
            "default": 1000,
            "type": "integer"
        }
    }
}

const setSchema = {
    "type": "object",
    "properties": {
        "serviceName": {
            "type": "string",
            "default": ""
        },
        "data": {
            "default": {},
            "type": "object"
        },
        "instanceId": {
            "default": uuidv4(),
            "type": "string"
        },

    }
}

const watchSchema = {
    "type": "object",
    "properties": {
        "serviceName": {
            "type": ["string", "null"],
            "default": null
        },
        "instanceId": {
            "type": "string",
            "default": ""
        },
        "etcdOptions": {
            "default": { wait: true, recursive: true },
            "type": "object"
        },
        "index": {
            "default": null,
            "type": ["integer", "null"]
        }
    }
}
const getSchema = {
    "type": "object",
    "properties": {
        "serviceName": {
            "type": ["string", "null"],
            "default": null
        },
        "prefix": {
            "type": ["string", "null"],
            "default": 'services'
        },
        "instanceId": {
            "type": "string",
            "default": ""
        },
        "etcdOptions": {
            "type": "object",
            "default": { recursive: true }
        },
        "index": {
            "default": null,
            "type": ["integer", "null"]
        }
    }

}

const initSchema = {
    "type": "object",
    "properties": {
        "etcd": {
            "host": {
                "type": "string",
                "required": true
            },
            "port": {
                "type": "integer",
                "required": true
            },
            "network": {
                "type": "string",
                "default": "http"
            }
        },
        "serviceName": {
            "type": "string",
            "required": true

        }
    }
}
module.exports = {
    getSchema,
    initSchema,
    registerSchema,
    watchSchema,
    setSchema
} 
